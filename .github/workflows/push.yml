name: push

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          python -m pip install -U pip
          python -m pip install black flake8 isort
          flake8 hainesm6_utils tests
          black hainesm6_utils tests
          isort hainesm6_utils

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        python-versions: ['3.8', '3.9', '3.10']
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      # `id` is Needed to provided a reference to the relavant poetry cache below in `Load cached venv`
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install deps
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # Install the root project each time
      - run: poetry install --no-interaction

      - run: |
          source .venv/bin/activate
          pytest --cov=hainesm6_utils --cov-branch --cov-report=xml tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: ./coverage.xml

  posttest:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          # This is necessary so that we have the tags for dunamai-action@v1
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: build documentation
        run: |
          poetry install -v
          poetry run mkdocs build

      - name: publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Assign version number
        uses: mtkennerly/dunamai-action@v1
        with:
          env-var: MY_VERSION
          command: dunamai from git
          args: --no-metadata --style semver
      - run: echo $MY_VERSION

      - name: Build wheels and source tarball
        run: |
          poetry version $MY_VERSION
          poetry version --short
          poetry build

      - name: publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
